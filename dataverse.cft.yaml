AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  PublicSubnetWad:
    Type: AWS::SSM::Parameter::Value<CommaDelimitedList>
    Description: Parameter name of comma-separated list of public subnets.
    AllowedValues:
      - /vpc/dev/public_subnet_ids
      - /vpc/test/public_subnet_ids
      - /vpc/prod/public_subnet_ids
    Default: /vpc/dev/public_subnet_ids

Description: >
  This template launches a demo Dataverse instance.

Resources:
  
  CloudFormationUser:
    Type: 'AWS::IAM::User'
    Properties:
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:DescribeStackResource'
                Resource: '*'

  CloudFormationUserKeys:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref CloudFormationUser

  DataverseLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: datavese-demo-launch-template
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              DeleteOnTermination: true
              VolumeSize: 100 
              VolumeType: gp3
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: ami-0d389fc983d5fd3f4
        InstanceType: t2.medium 
        Monitoring:
          Enabled: true
        NetworkInterfaces:
          - NetworkInterfaceId: !Ref DataverseNetworkInterface 
            DeviceIndex: 0
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash -xe
              echo "hello" > /tmp/hello.txt

        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: datavese-demo-instance 
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: dataverse-demo-root-volume

  DataverseNetworkInterface:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      SubnetId: 
        Fn::Select:
          - 0
          - !Ref PublicSubnetWad
      Description: dataverse-demo-network-interface
      GroupSet:
        - !Ref DataverseSecurityGroup
      SourceDestCheck: true
      Tags:
        - Key: Name
          Value: dataverse-demo-network-interface

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref DataverseLaunchTemplate
        Version: !GetAtt DataverseLaunchTemplate.LatestVersionNumber

  DataverseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: dataverse-demo-sg 
      VpcId: "{{resolve:ssm:/vpc/dev/vpc_id}}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: dataverse-demo-sg

  EIPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: eipalloc-0fd97de2eb8858ad9
      NetworkInterfaceId: !Ref DataverseNetworkInterface

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/fsulib/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
  
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: DataverseProfile
      Roles:
        - !Ref Role


